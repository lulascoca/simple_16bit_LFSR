#include <iostream>

class LFSR {
    public:
        LFSR();
        // creates an LFSR with the specified seed and tap
        LFSR(uint16_t seed, uint16_t tap);

        // returns bit i as 0 or 1.
        uint8_t bitAt(uint32_t i);

        // returns a string representation of the seed
        std::string toString();

        // simulates one step of this LFSR and return the new bit as 0 or 1
        uint8_t step();

        // simulates k steps of this LFSR and return the k bits as a k-bit integer
        uint32_t generate(uint32_t k);

        // goes through the series generated by the lfsr until a number in the range [i, j] is generated
        uint32_t generateRange(uint32_t i, uint32_t j);

        // rever seed to originSeed
        void resetSeed();
        // setter for seed
        void setSeed(uint16_t seed);
        // setter for tap
        void setTap(uint16_t tap);

    private:
        uint16_t seed;
        uint16_t originSeed;
        uint16_t tap;
};